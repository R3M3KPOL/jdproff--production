@use '../utils'as *;

$em : 0.0625000000em;  //for ''$breakpoint = -1px''.

$breakpoints: (
  'sm': em(576),//576px,
  'md': em(768),//768px,
  'lg': em(992),//992px,
  'xl': em(1200),//1200px,
  'xxl': em(1400),//1400px
  'landscape' : landscape,
);


@mixin breakpoint-min($size) {
    @media (min-width: map-get($breakpoints, $size)) {
        @content;
    }
    
};

@mixin breakpoint-max($size) {
    @media (max-width: map-get($breakpoints,  $size)) {
        @content;
    }
    
}
@mixin breakpoint-landscape($orientation){
    @media (orientation:map-get($breakpoints,$orientation)){
        @content;
    }
}

@mixin breakpoint-between($sizemin, $sizemax){
    @media (min-width:map-get($breakpoints, $sizemin)) and (max-width:map-get($breakpoints,$sizemax)){
        @content;
    }
}

@mixin breakpoint-min-max-or($sizemin, $sizemax, $orientation){
    @media (min-width:map-get($breakpoints, $sizemin)) and (max-width:map-get($breakpoints,$sizemax)), (orientation:map-get($breakpoints,$orientation)){
        @content;
    }
}


@mixin breakpoint($size, $direction) {
    @if map-has-key($breakpoints, $size){
        $breakpoint-value:map-get($breakpoints, $size);
        @if $direction == max {
            @media (max-width:($breakpoint-value -$em)){
                @content;
            }
        }
        @else if $direction == min {
            @media (min-width:$breakpoint-value){
                @content;
            }
        }
        @else {
      @media ($direction: $breakpoint-value) {
        @content;
      }
    }
}
}
